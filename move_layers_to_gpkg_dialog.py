"""/***************************************************************************
 MoveLayersToGPKGDialog
                                 A QGIS plugin
 This plugin renames selected layers (if they are nested in groups) and moves them to a new GeoPackage
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-03-04
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Florian Ludwig
        email                : lasinludwig@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from pathlib import Path

from qgis.core import QgsLayerTreeModel, QgsProject
from qgis.PyQt import QtWidgets, uic

# This loads your .ui file so that PyQt can populate
# your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(
    str(Path(__file__).parent / "move_layers_to_gpkg_dialog_base.ui")
)


class MoveLayersToGPKGDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, plugin, parent=None) -> None:
        """Initialize the dialog window."""
        super().__init__(parent)
        self.plugin = plugin
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        # Connect the button to the plugin's method.
        self.rename_Button_FL.clicked.connect(self.plugin.rename_selected_layers)

        # Set up the layer tree view model. The QgsLayerTreeView widget itself
        # is now created directly from the .ui file.
        self.layer_tree_model = QgsLayerTreeModel(QgsProject.instance().layerTreeRoot())
        self.Layer_Tree_FL.setModel(self.layer_tree_model)
